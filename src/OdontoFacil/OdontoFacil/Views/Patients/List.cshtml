@model IEnumerable<OdontoFacil.Models.Views.PatientListViewModel>

@{
    ViewData["Title"] = "Lista de Pacientes";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">@ViewData["Title"]</h1>

            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CPF)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Age)
                            </th>
                            <th>Ações</th> 
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @(item.CPF != null ? FormatCPF(item.CPF) : "N/A")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Age)
                                </td>
                                <td>
                                                <a href="@($"/Paciente/{item.Id}/Editar")" class="btn btn-info btn-sm">Detalhes</a>
                                 
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    
    public String FormatCPF(String cpf)
    {
        if (string.IsNullOrEmpty(cpf) || cpf.Length != 11)
        {
            return cpf; 
        }
        return $"{cpf.Substring(0, 3)}.{cpf.Substring(3, 3)}.{cpf.Substring(6, 3)}-{cpf.Substring(9, 2)}";
    }
}
