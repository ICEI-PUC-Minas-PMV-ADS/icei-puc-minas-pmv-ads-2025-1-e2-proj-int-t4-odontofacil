@using OdontoFacil.Constants
@using System.Text.RegularExpressions
@model OdontoFacil.Models.Views.ExamViewModel

@{
  ViewData["Title"] = "Exames";

  bool ShouldAllowUserIdChoice()
  {
    return User.IsInRole(UserTypes.Dentist) || User.IsInRole(UserTypes.Helper);
  }

  string FormatCPF(string rawCPF)
  {
    return Regex.Replace(rawCPF, @"(\d{3})(\d{3})(\d{3})(\d{2})", @"$1.$2.$3-$4");
  }
}

<div class="page-container">
  <div class="page-title">
    <h1>Pedidos de Exames</h1>
    <a class="btn btn-primary" href="/Solicitacoes">Novo Pedido</a>
  </div>

  @if (ShouldAllowUserIdChoice())
  {
    <form method="get">
      <div class="form-group mt-2 select-container">
        <label for="UserId">Filtrar por paciente:</label>
        <select asp-for="UserId" class="form-control mt-1" autocomplete="off">
          <option value="">Todos os pacientes</option>
          @foreach (var user in ViewBag.Users)
          {
            <option value="@user.Id">
              @user.Name - @FormatCPF(user.CPF)
            </option>
          }
        </select>
        <button type="submit" class="btn btn-secondary mt-2">Filtrar</button>
      </div>
    </form>
  }

  <table class="table mt-4">
    <thead>
      <tr>
        <th>Paciente</th>
        <th>Dentista</th>
        <th>Tipo</th>
        <th>Data</th>
        <th>Resultado</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var examRequest in Model.Exams)
      {
        <tr>
          <td>@examRequest.Patient</td>
          <td>@examRequest.Dentist</td>
          <td>@examRequest.Type</td>
          <td>@examRequest.RequestDate.ToString("dd/MM/yyyy")</td>
          <td>
            @if (examRequest.Result == null)
            {
              <button class="btn btn-sm btn-secondary" disabled>Sem Resultado</button>
            }
            else
            {
              <a class="btn btn-primary btn-sm">Visualizar Resultado</a>
            }
          </td>
        </tr>
      }
    </tbody>
  </table>
</div>
