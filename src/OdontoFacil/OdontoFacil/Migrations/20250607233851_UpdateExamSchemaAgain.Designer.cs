// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdontoFacil.Data;

#nullable disable

namespace OdontoFacil.Migrations
{
    [DbContext(typeof(OdontoFacilDbContext))]
    [Migration("20250607233851_UpdateExamSchemaAgain")]
    partial class UpdateExamSchemaAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EspecialidadeDentistum", b =>
                {
                    b.Property<string>("IdDentista")
                        .HasColumnType("character varying")
                        .HasColumnName("id_dentista");

                    b.Property<string>("IdEspecialidade")
                        .HasColumnType("character varying")
                        .HasColumnName("id_especialidade");

                    b.HasKey("IdDentista", "IdEspecialidade")
                        .HasName("Especialidade_Dentista_pkey");

                    b.HasIndex("IdEspecialidade");

                    b.ToTable("Especialidade_Dentista", (string)null);
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Address", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cep");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("complemento");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bairro");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estado");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.AnamnesisAnswer", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_pergunta");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_paciente");

                    b.Property<bool>("Answer")
                        .HasColumnType("bit")
                        .HasColumnName("resposta");

                    b.Property<string>("TextAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resposta_textual");

                    b.HasKey("QuestionId", "PatientId");

                    b.HasIndex("PatientId");

                    b.ToTable("Resposta_Anamnese");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.AnamnesisQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("Pergunta_Anamnese");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Appointment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AppointmentDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("DentistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_dentista");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_paciente");

                    b.HasKey("Id");

                    b.HasIndex("DentistId");

                    b.HasIndex("PatientId");

                    b.ToTable("Atendimento");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Dentist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cro");

                    b.HasKey("Id");

                    b.ToTable("Dentista");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.DentistScheduleAvailability", b =>
                {
                    b.Property<string>("DentistId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_dentista");

                    b.Property<string>("WeekDay")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("dia_semana");

                    b.Property<int>("EndingHour")
                        .HasColumnType("int")
                        .HasColumnName("hora_final");

                    b.Property<int>("InitialHour")
                        .HasColumnType("int")
                        .HasColumnName("hora_inicial");

                    b.HasKey("DentistId", "WeekDay");

                    b.ToTable("HorarioAtendimento");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("DentistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_dentista");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_paciente");

                    b.Property<DateOnly>("RequestDate")
                        .HasColumnType("date")
                        .HasColumnName("data_solicitacao");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("DentistId");

                    b.HasIndex("PatientId");

                    b.HasIndex("Type");

                    b.ToTable("Pedido_Exame");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("ExamRequestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_pedido_exame");

                    b.Property<string>("Lab")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("laboratorio");

                    b.HasKey("Id");

                    b.HasIndex("ExamRequestId");

                    b.ToTable("Resultado_Exame");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Exame");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.HealthPlan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Helper", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.HasKey("Id");

                    b.ToTable("Auxiliar");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.MedicalHistoryItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("Antecedente");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Note", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("ContentNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("conteudo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<string>("DentistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_dentista");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_paciente");

                    b.Property<string>("PatientNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("DentistId");

                    b.HasIndex("PatientId");

                    b.ToTable("Anotacoes");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_endereco");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone");

                    b.Property<string>("PlanId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_convenio");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sexo");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[id_endereco] IS NOT NULL");

                    b.HasIndex("PlanId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Specialty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PacienteAntecedente", b =>
                {
                    b.Property<string>("IdPaciente")
                        .HasColumnType("character varying")
                        .HasColumnName("id_paciente");

                    b.Property<string>("IdAntecedente")
                        .HasColumnType("character varying")
                        .HasColumnName("id_antecedente");

                    b.HasKey("IdPaciente", "IdAntecedente")
                        .HasName("Paciente_Antecedente_pkey");

                    b.HasIndex("IdAntecedente");

                    b.ToTable("Paciente_Antecedente", (string)null);
                });

            modelBuilder.Entity("EspecialidadeDentistum", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Dentist", null)
                        .WithMany()
                        .HasForeignKey("IdDentista")
                        .IsRequired()
                        .HasConstraintName("Especialidade_Dentista_id_dentista_fkey");

                    b.HasOne("OdontoFacil.Models.Data.Specialty", null)
                        .WithMany()
                        .HasForeignKey("IdEspecialidade")
                        .IsRequired()
                        .HasConstraintName("Especialidade_Dentista_id_especialidade_fkey");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.AnamnesisAnswer", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.AnamnesisQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Appointment", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Dentist", "Dentist")
                        .WithMany("Appointments")
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentist");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Dentist", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.User", "User")
                        .WithOne("Dentist")
                        .HasForeignKey("OdontoFacil.Models.Data.Dentist", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.DentistScheduleAvailability", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Dentist", "Dentists")
                        .WithMany()
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentists");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamRequest", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Dentist", "Dentist")
                        .WithMany("ExamRequests")
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.Patient", "Patient")
                        .WithMany("ExamRequests")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.ExamType", "TypeNavigation")
                        .WithMany("ExamRequests")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentist");

                    b.Navigation("Patient");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamResult", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.ExamRequest", "ExamRequest")
                        .WithMany("Results")
                        .HasForeignKey("ExamRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamRequest");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Helper", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.User", "User")
                        .WithOne("Helper")
                        .HasForeignKey("OdontoFacil.Models.Data.Helper", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Note", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Dentist", "Dentist")
                        .WithMany()
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentist");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Patient", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.Address", "Address")
                        .WithOne("Patient")
                        .HasForeignKey("OdontoFacil.Models.Data.Patient", "AddressId");

                    b.HasOne("OdontoFacil.Models.Data.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("OdontoFacil.Models.Data.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdontoFacil.Models.Data.HealthPlan", "HealthPlan")
                        .WithMany("Patients")
                        .HasForeignKey("PlanId");

                    b.Navigation("Address");

                    b.Navigation("HealthPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PacienteAntecedente", b =>
                {
                    b.HasOne("OdontoFacil.Models.Data.MedicalHistoryItem", null)
                        .WithMany()
                        .HasForeignKey("IdAntecedente")
                        .IsRequired()
                        .HasConstraintName("Paciente_Antecedente_id_antecedente_fkey");

                    b.HasOne("OdontoFacil.Models.Data.Patient", null)
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("Paciente_Antecedente_id_paciente_fkey");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Address", b =>
                {
                    b.Navigation("Patient")
                        .IsRequired();
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Dentist", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ExamRequests");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamRequest", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.ExamType", b =>
                {
                    b.Navigation("ExamRequests");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.HealthPlan", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ExamRequests");
                });

            modelBuilder.Entity("OdontoFacil.Models.Data.User", b =>
                {
                    b.Navigation("Dentist");

                    b.Navigation("Helper");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
